apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: mongodbcompositeworkloads.kubernetes.gitops.bluesolution.es
spec:
  compositeTypeRef:
    apiVersion: gitops.bluesolution.es/v1alpha1
    kind: MongodbCompositeWorkload
  resources:
    - name: mongodbNamespace
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          name: mongodb-namespace
          namespace: default
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: mongodb
          providerConfigRef:
            name: kubernetes-provider

    - name: mongodbConfigmap
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest: 
              # see: https://github.com/mongodb/mongodb-kubernetes-operator/blob/master/docs/deploy-configure.md
              # kubectl get secret blue-mongodb-admin-user -n mongodb -o json | jq -r '.data | with_entries(.value |= @base64d)'
              # Then: k port-forward pod/blue-mongodb-0 8000:40333
              # k port-forward service/blue-mongodb-svc 8000:40333 -n mongodb

              # Connect from cli: mongosh "mongodb://user:admin@localhost:8000/?authMechanism=DEFAULT&authSource=admin"
              apiVersion: v1 
              kind: ConfigMap
              metadata:
                name: mongodb-configmap
                namespace: mongodb
              data:
                # database_url: blue-mongodb-0, blue-mongodb-1, blue-mongodb-2
                # connectionString.standard: mongodb://admin:admin@blue-mongodb-svc:40333/db?ssl=false
                # connectionString.standard: mongodb://user:admin@blue-mongodb-0.blue-mongodb-svc,blue-mongodb-0.blue-mongodb-svc,blue-mongodb-0.blue-mongodb-svc:40333/dbname_?
                # connectionString.standard: mongodb://user:admin@blue-mongodb-0.blue-mongodb-svc.cluster.local/dbname_?
                connectionString.standard: mongodb://user:admin@blue-mongodb-0.blue-mongodb-svc.mongodb.svc.cluster.local:40333,blue-mongodb-1.blue-mongodb-svc.mongodb.svc.cluster.local:40333,blue-mongodb-2.blue-mongodb-svc.mongodb.svc.cluster.local:40333/videos?replicaSet=blue-mongodb&ssl=false
                connectionString.standardSrv: mongodb+srv://user:admin@blue-mongodb-svc.mongodb.svc.cluster.local/videos?replicaSet=blue-mongodb&ssl=false
                password: admin
                username: user 

    - name: mongodbCommunityOperatorBlueMongodb
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest: 
              apiVersion: mongodbcommunity.mongodb.com/v1
              kind: MongoDBCommunity
              metadata:
                name: blue-mongodb
                namespace: mongodb
              spec:
                members: 1
                arbiters: 0
                type: ReplicaSet
                version: "6.0.5"
                security:
                  authentication:
                    modes: ["SCRAM"]
                users:
                  - name: user
                    db: admin
                    passwordSecretRef: # a reference to the secret that will be used to generate the user's password
                      name: user-password
                    roles:
                      - name: clusterAdmin
                        db: admin
                      - name: userAdminAnyDatabase
                        db: admin
                      - name: readWriteAnyDatabase
                        db: admin
                      - name: readWrite
                        db: local
                      - name: readWrite
                        db: config
                      - name: readWrite
                        db: blue-mongodb  
                    scramCredentialsSecretName: my-scram
                additionalMongodConfig:
                  # the additional config passed to the mongod process can be specified
                  # either in nested or dot notation
                  storage.wiredTiger.engineConfig.journalCompressor: zlib
                  net:
                    port: 40333

    - name: secretMongoDb
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              # the user credentials will be generated from this secret
              # once the credentials are generated, this secret is no longer required
              apiVersion: v1
              kind: Secret
              metadata:
                name: user-password
                namespace: mongodb
              type: Opaque
              stringData:
                password: admin 

                                    