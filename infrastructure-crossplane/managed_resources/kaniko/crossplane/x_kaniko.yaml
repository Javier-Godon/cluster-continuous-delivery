apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: kanikocompositeworkloads.gitops.bluesolution.es
spec:
  compositeTypeRef:
    apiVersion: gitops.bluesolution.es/v1alpha1
    kind: KanikoCompositeWorkload
  resources:
    - name: kanikoNamespace
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          name: kaniko-namespace
          # namespace: default
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: tekton-pipelines
          providerConfigRef:
            name: kubernetes-provider
    - name: kanikoPod
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:  
              apiVersion: v1
              kind: Pod
              metadata:
                name: kaniko
                namespace: tekton-pipelines
              spec:
                containers:
                  - name: kaniko
                    image: gcr.io/kaniko-project/executor:latest
                    args:
                      - "--dockerfile=/workspace/dockerfile"
                      - "--context=dir://workspace"
                      - "--destination=<gcr.io/$PROJECT/$IMAGE:$TAG>" # replace with your account
                    volumeMounts:
                      - name: kaniko-secret
                        mountPath: /secret
                      - name: dockerfile-storage
                        mountPath: /workspace        
                restartPolicy: Never
                volumes:
                  - name: kaniko-secret
                    secret:
                      secretName: regcred
                      items:
                        - key: .dockerconfigjson
                          path: config.json
                  - name: dockerfile-storage
                    persistentVolumeClaim:
                      claimName: kaniko-pv-claim 
          patches:
            - fromFieldPath: "spec.namespace"
              toFieldPath: "spec.forProvider.manifest.metadata.namespace"
              policy:
                fromFieldPath: "Required" 
    - name: kanikoPersistentVolume
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          patches:
            - fromFieldPath: "spec.namespace"
              toFieldPath: "spec.forProvider.manifest.metadata.namespace"
              policy:
                fromFieldPath: "Required" 
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              apiVersion: v1
              kind: PersistentVolume
              metadata:
                name: kaniko-pv
                namespace: tekton-pipelines
                labels:
                  type: local
              spec:
                capacity:
                  storage: 10Gi
                accessModes:
                  - ReadWriteOnce
                storageClassName: local-storage
                hostPath:
                  path: "/mnt/data/kaniko-volume" 

    - name: kanikoPersistentVolumeClaim
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          patches:
            - fromFieldPath: "spec.namespace"
              toFieldPath: "spec.forProvider.manifest.metadata.namespace"
              policy:
                fromFieldPath: "Required" 
          providerConfigRef:
            name: kubernetes-provider
          forProvider:
            manifest:
              kind: PersistentVolumeClaim
              apiVersion: v1
              metadata:
                name: kaniko-pv-claim
                namespace: tekton-pipelines
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 8Gi
                storageClassName: local-storage                                